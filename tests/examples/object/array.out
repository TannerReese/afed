# Test array operations

# Indexing
arr: [1, 2, 3,  ] = `[1, 2, 3]`,
arr 1 = `2`,
arr 50 = `Eval Error: Index 50 is out of bounds`,

# Operations
arr + ["Hell"] + arr = `[1, 2, 3, "Hell", 1, 2, 3]`,
3 * ([4] + arr) = `[4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3]`,

# Empty array
[] = `[]`,

# Array unimplemented operators
[1, 1] + "This" = `Eval Error: Binary operator + not implemented between [1, 1] and "This"`,
-[null] = `Eval Error: Unary operator - not implemented for type array`,
!["h"] = `Eval Error: Unary operator ! not implemented for type array`,
[0] * [9, 3] = `Eval Error: Binary operator * not implemented between [0] and [9, 3]`,
[2, 3] % 8 = `Eval Error: Binary operator % not implemented between [2, 3] and 8`,

# Not a method
arr.njfd = `Eval Error: Cannot call method njfd on type array`,

# Array method errors
(b + ["Hello"]).min = `Eval Error: Cannot compare all elements in array`,

# Array methods
arr2.len = `6`,
arr2.fst = `8`, arr2.snd = `-1`,
arr2.last = `3`,
arr2: [8, -1, 2, 0, -7, 3],
arr2.sum = `5`,

pos: arr2.filter \x: x > 0 = `[8, 2, 3]`,
not_zero x: x != 0,
(arr2.filter not_zero).prod = `336`,
pos.map num.sqrt = `[2.8284271247461903, 1.4142135623730951, 1.7320508075688772]`,

arr2.any \x: x^2 > 50 = `true`,
arr2.all \x: x > 0 = `false`,
pos.has 2 = `true`,

b.max = `13 / 4`, b.min = `-2.3`,
b.rev = `[13 / 4, -2.3, 2, 1]`,
b: [1, 2, -2.3, 13/4],
b.fold 1 \acc t: (acc + t) / 2 = `1.425`,

